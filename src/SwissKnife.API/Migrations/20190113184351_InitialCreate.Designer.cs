// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using SwissKnife.API.Persistence;

namespace SwissKnifeDotNetCore.Migrations
{
    [DbContext(typeof(AppDbContext))]  
    [Migration("20190113184351_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SwissKnifeDotNetCore.Data.Entities.Poll", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("QuestionText");

                    b.HasKey("Id");

                    b.ToTable("Polls");
                });

            modelBuilder.Entity("SwissKnifeDotNetCore.Data.Entities.PollOption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Answers");

                    b.Property<int>("PollId");

                    b.Property<int>("Vote");

                    b.HasKey("Id");

                    b.HasIndex("PollId");

                    b.ToTable("PollOptions");
                });

            modelBuilder.Entity("SwissKnifeDotNetCore.Data.Entities.PollOption", b =>
                {
                    b.HasOne("SwissKnifeDotNetCore.Data.Entities.Poll", "Poll")
                        .WithMany("PollOptions")
                        .HasForeignKey("PollId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
